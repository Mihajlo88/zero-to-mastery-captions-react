WEBVTT

00:00.420 --> 00:07.770
So in the last lesson we learned how to encrypt and write our security rules for our users collection.

00:07.800 --> 00:10.500
But what about our collections collection.

00:10.500 --> 00:16.200
Let's actually encrypt that using very similar style of rules because they're probably going to be the

00:16.200 --> 00:16.590
same.

00:16.590 --> 00:21.740
The only difference is we're going to tweak it based on the needs of that database in particular.

00:21.930 --> 00:27.990
So we're going to match just as we did before our collections collection and we're going to target every

00:27.990 --> 00:31.170
collection Document object inside.

00:31.200 --> 00:36.930
Now what we want users to do is they should be allowed to get both the list as well as the individual

00:36.930 --> 00:38.190
document reference objects.

00:38.190 --> 00:43.860
That's perfectly fine because they actually need it to populate our web application so we will allow

00:43.860 --> 00:49.230
read with no other stipulations about needing them to be authenticated or not doesn't really matter.

00:49.260 --> 00:55.740
They can totally read the only person though that should be allowed to create anything to this collection

00:56.160 --> 00:58.260
should be the user.

00:58.260 --> 01:00.620
That is our own user.

01:00.690 --> 01:02.640
We are the administrator of this Web site.

01:02.640 --> 01:08.460
We should be the only person that should be allowed to create or update any of these things in order

01:08.460 --> 01:09.540
for that rule to work.

01:09.540 --> 01:11.500
We can actually say allow.

01:11.500 --> 01:12.340
Right.

01:12.480 --> 01:22.400
If the request is authenticated so we make sure that it's not null and we make sure that the authenticated

01:22.400 --> 01:25.540
you I.D. is our own user.

01:25.550 --> 01:32.600
So what you can do is go into either your database or your authentication tab find your email for your

01:32.600 --> 01:38.720
account and then copy that user I.D. and then what you're going to do is you are just going to paste

01:38.720 --> 01:39.980
it here.

01:39.980 --> 01:46.820
And this rule essentially now states that the only person that is allowed to actually make and build

01:46.880 --> 01:50.600
new collections is your own user.

01:50.600 --> 01:54.700
So the only way you can do it is you have to make sure you're also signed into the application.

01:54.740 --> 01:55.880
But this is perfectly fine.

01:56.540 --> 02:04.580
So now as long as we're signed in we're actually now able to write to our collections and this is something

02:04.580 --> 02:10.010
you might want to do in the future if you make some kind of dashboard or something like that but this

02:10.010 --> 02:16.060
rule allows you to do pretty much the same thing and this is pretty much all we need for our collections

02:16.060 --> 02:23.800
to also be now encrypted we can even test this out by saying that if we are trying to build a new collections

02:23.950 --> 02:26.840
at this same doesn't really matter.

02:27.190 --> 02:32.200
Some new collection object and let's say we're trying to build a new trench coat section.

02:32.200 --> 02:41.980
So the name of the section will be trench coats if that were the case and we were not our user and we

02:41.980 --> 02:44.810
tried to run this create function will be denied.

02:45.280 --> 02:50.280
But if we are our user and we run it we'll see that we succeeded.

02:50.290 --> 02:55.840
So we've pretty much seen how these rules and these conditions can work for both our collections as

02:55.840 --> 02:57.080
well as our users.

02:57.130 --> 03:00.820
And this is pretty much all we need in order to encrypt our database.

03:00.820 --> 03:06.460
The last step now is to simply publish our new changes so that these are actually what goes live.

03:07.390 --> 03:11.070
And with that our database is now secure.

03:11.080 --> 03:17.550
So what I challenge you to do is delete everything that you saw me write and try it yourself.

03:17.560 --> 03:23.410
And this way you can see whether or not you're actually familiar with the security rules.

03:23.410 --> 03:28.930
You can also now completely build new features around these security rules to have a full understanding

03:28.990 --> 03:34.780
of everything that we've done in this course alongside these security rules to see if you have a full

03:34.780 --> 03:41.560
understanding of how the flow of a new feature would get implemented and the feature that I'm actually

03:41.560 --> 03:50.530
going to request that you build is to move the actual storage of the cart in to firebase.

03:50.530 --> 03:57.190
So as far as our car dropdown is supposed to go there are different actions that trigger updating the

03:57.190 --> 04:00.870
car as we remember throughout this course.

04:00.900 --> 04:06.600
The challenge now is to write the appropriate sagas or update the appropriate sagas so that what happens

04:06.660 --> 04:15.690
is that if a user is signed in they are able to update or create a car inside of the database and then

04:15.930 --> 04:23.970
once they've actually made updates or they've signed out if they sign back in they should be able to

04:23.970 --> 04:30.180
pull in their cart that is stored in our database into the application so that they can continue from

04:30.180 --> 04:39.470
where they left off I will of course include the code inside of the final repo here inside of your resources

04:39.470 --> 04:42.820
folder so that you can see how I would implement such a feature.

04:42.890 --> 04:50.960
But the challenge is for you students to actually take a tackle app building out this slightly complex

04:50.960 --> 04:54.510
feature yourself figure out what security rules you've got to write.

04:54.530 --> 05:00.710
Figure out all the sagas figure out the actions figure out what code you have to update and this is

05:00.710 --> 05:06.710
the best way to make sure that you've solidified your full understanding of everything we've done with

05:06.830 --> 05:09.890
all of these libraries and all of these services.

05:09.890 --> 05:16.930
Building our e-commerce platform I hope you've enjoyed this lesson on security rules and hopefully with

05:16.930 --> 05:23.170
this you'll be able to take a challenge and try out this feature that I've just suggested with moving

05:23.230 --> 05:26.530
the cart into our fire store database.

05:26.530 --> 05:33.070
There will actually also be a couple new things you might have to look at and get familiar with inside

05:33.130 --> 05:36.230
of the firebase documentation.

05:36.460 --> 05:40.360
But I will list all of the details in the next lesson.

05:40.400 --> 05:45.580
It'll be an article and it'll include all the resources you need to tackle this coding challenge as

05:45.580 --> 05:48.130
well as the final solution there as well.

05:48.160 --> 05:51.000
So good luck everyone and we'll see you in the next lesson.
